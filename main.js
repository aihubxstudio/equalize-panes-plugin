/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var h=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var m=Object.prototype.hasOwnProperty;var f=(t,e)=>{for(var s in e)h(t,s,{get:e[s],enumerable:!0})},v=(t,e,s,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let o of E(e))!m.call(t,o)&&o!==s&&h(t,o,{get:()=>e[o],enumerable:!(i=p(e,o))||i.enumerable});return t};var w=t=>v(h({},"__esModule",{value:!0}),t);var y={};f(y,{default:()=>d});module.exports=w(y);var n=require("obsidian"),c={en:{noticeEqual:"Panes equalized.",noticeRestored:"Pane widths restored.",errorTooFew:"At least 2 panes must be open.",errorNotFound:"No panes found.",statusEqualized:"\u{1F7F0} Equalize",noticeNoPrevious:"No record of the previous pane width."},ja:{noticeEqual:"\u5404\u30DA\u30A4\u30F3\u3092\u5747\u7B49\u306B\u8A2D\u5B9A\u3057\u307E\u3057\u305F\u3002",noticeRestored:"\u30DA\u30A4\u30F3\u5E45\u3092\u5143\u306B\u623B\u3057\u307E\u3057\u305F\u3002",errorTooFew:"2\u3064\u4EE5\u4E0A\u306E\u30DA\u30A4\u30F3\u304C\u958B\u3044\u3066\u3044\u308B\u5FC5\u8981\u304C\u3042\u308A\u307E\u3059\u3002",errorNotFound:"\u30DA\u30A4\u30F3\u304C\u691C\u51FA\u3067\u304D\u307E\u305B\u3093\u3067\u3057\u305F\u3002",statusEqualized:"\u{1F7F0} \u30DA\u30A4\u30F3\u5747\u7B49",noticeNoPrevious:"\u524D\u306E\u30DA\u30A4\u30F3\u5E45\u306E\u8A18\u9332\u304C\u3042\u308A\u307E\u305B\u3093\u3002"}},r=t=>{let e=localStorage.getItem("language")||"en";return c[e]&&t in c[e]?c[e][t]:c.en[t]},d=class extends n.Plugin{constructor(){super(...arguments);this.statusBarItemEl=null;this.previousWidths=new Map}onload(){this.addCommand({id:"equalize-pane-widths",name:"Equalize Pane Widths / \u5747\u7B49\u306B\u30DA\u30A4\u30F3\u5E45\u3092\u305D\u308D\u3048\u308B",callback:()=>this.equalizePanes()}),this.statusBarItemEl=this.addStatusBarItem(),this.statusBarItemEl.setText(r("statusEqualized")),this.statusBarItemEl.style.cursor="pointer",this.statusBarItemEl.onclick=()=>{this.equalizePanes()},this.registerEvent(this.app.workspace.on("layout-change",()=>{this.equalizePanes()})),this.addCommand({id:"restore-pane-widths",name:"Restore Previous Pane Widths / \u30DA\u30A4\u30F3\u5E45\u3092\u5143\u306B\u623B\u3059",callback:()=>this.restorePreviousWidths()})}onunload(){this.statusBarItemEl&&(this.statusBarItemEl.remove(),this.statusBarItemEl=null)}equalizePanes(){let s=this.app.workspace.rootSplit;if(!s){new n.Notice(r("errorNotFound"));return}let i=s.children,o=i.length;if(o<2){new n.Notice(r("errorTooFew"));return}let l=100/o;this.previousWidths.clear(),i.forEach(a=>{let u=a.containerEl;this.previousWidths.set(u,u.style.flex)}),i.forEach(a=>{let u=a.containerEl;u.style.flex=`0 0 ${l}%`}),new n.Notice(`${r("noticeEqual")} ${l.toFixed(2)}%`)}restorePreviousWidths(){if(this.previousWidths.size===0){new n.Notice(r("noticeNoPrevious"));return}let s=this.app.workspace.rootSplit;if(!s)return;s.children.forEach(o=>{let l=o.containerEl,a=this.previousWidths.get(l);a&&(l.style.flex=a)}),new n.Notice(r("noticeRestored"))}};
